/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT_L 0
#define SYMBOLS_L 1
#define ARROWS_L  2
#define NUMBERS_L 3

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        a {
            bindings = <&kp ESCAPE>;
            key-positions = <2 1>;
        };

        b {
            bindings = <&kp CLCK>;
            key-positions = <14 13>;
        };

        c {
            bindings = <&kp TAB>;
            key-positions = <26 25>;
        };

        d {
            bindings = <&kp BACKSPACE>;
            key-positions = <10 9>;
        };

        e {
            bindings = <&kp ENTER>;
            key-positions = <22 21>;
        };

        f {
            bindings = <&kp MINUS>;
            key-positions = <19 20>;
        };

        g {
            bindings = <&kp EQUAL>;
            key-positions = <21 20>;
        };

        h {
            bindings = <&sys_reset>;
            key-positions = <1 29>;
        };

        j {
            bindings = <&sys_reset>;
            key-positions = <30 10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "0";
            bindings = <
&kp ESC         &kp Q               &kp W  &kp E      &kp R                 &kp T                                 &kp Y      &kp U                  &kp I            &kp O    &kp P       &kp BSPC
&kp TAB         &lt 3 A             &kp S  &kp D      &kp F                 &kp G                                 &kp H      &kp J                  &kp K            &kp L    &lt 2 SEMI  &kp SQT
&kp LEFT_SHIFT  &mt LEFT_CONTROL Z  &kp X  &kp C      &kp V                 &kp B                                 &kp N      &kp M                  &kp COMMA        &kp DOT  &kp FSLH    &kp RSHFT
                                           &lt 1 F11  &mt LEFT_COMMAND F12  &mt LS(LA(LC(LEFT_COMMAND))) SPACE    &kp ENTER  &mt RIGHT_COMMAND F13  &lt 1 RIGHT_ALT
            >;
        };

        number_layer {
            label = "1";
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_CLR   &none   &none   &none   &none    &none
&none  &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6       &kp N7  &kp N8  &kp N9  &kp N0   &none
&none  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6       &kp F7  &kp F8  &kp F9  &kp F10  &none
                                   &none         &none         &bootloader     &bootloader  &none   &none
            >;
        };

        arrow_layer {
            label = "3";
            bindings = <
&none  &kp EXCLAMATION  &kp AT_SIGN  &kp LEFT_BRACE  &kp RIGHT_BRACE        &kp PIPE     &kp PAGE_UP    &none     &kp UP     &none      &none  &none
&none  &kp HASH         &kp DOLLAR   &kp LPAR        &kp RIGHT_PARENTHESIS  &kp GRAVE    &kp PAGE_DOWN  &kp LEFT  &kp DOWN   &kp RIGHT  &none  &none
&none  &kp AMPS         &kp CARET    &kp LBKT        &kp RBKT               &kp TILDE    &none          &kp PLUS  &kp MINUS  &kp EQUAL  &none  &none
                                     &none           &none                  &none        &none          &none     &none
            >;
        };

        control_layer {
            label = "2";
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans       &trans       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans       &trans       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans       &trans       &trans  &trans  &trans  &trans  &trans
                        &trans  &kp BSPC  &kp ENTER    &kp K_SLEEP  &trans  &trans
            >;
        };
    };
};
